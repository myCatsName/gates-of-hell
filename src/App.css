Body {
  background: #333;
  overflow: hidden;
  height: 100dvh;
  user-select: none;
}

button {
  filter: drop-shadow(0 2px 1rem rgba(14, 13, 13, 0.8));
  font-family: "Slackside One";
  &:active {
    transform: translateY(3px);
  }
}
/*double class selector to raise specificity above ChakraUI */
.modal-button.modal-button {
  font-size: 1.25em;
  background: linear-gradient(
      rgba(165, 42, 42, 0.7) 0%,
      rgba(165, 42, 42, 0.7) 100%
    ),
    linear-gradient(
      180deg,
      rgba(85, 85, 85, 0.5) 15%,
      rgba(165, 42, 42, 0.9) 78%,
      rgba(85, 85, 85, 0.9) 95%
    );
  border: 3px ridge gold;
  outline: 2px solid black;
  outline-offset: 0;
  text-shadow: 1px 1px 2px goldenrod;
  transition: all 0.3s ease-in-out;
  &:hover {
    background: rgba(218, 165, 32, 0.8)
      linear-gradient(
        160deg,
        rgba(85, 85, 85, 0.6) 5%,
        rgba(255, 215, 0, 1) 60%,
        rgba(85, 85, 85, 0.6) 95%
      );
    border: 3px ridge brown;
    z-index: 3;
  }
  &:focus,
  &:focus-visible {
    outline: 2px solid black;
    box-shadow: none !important;
  }
  &:active {
    background: rgba(255, 215, 0, 0.8)
      linear-gradient(
        160deg,
        rgba(85, 85, 85, 0.6) 5%,
        rgba(255, 215, 0, 1) 60%,
        rgba(85, 85, 85, 0.6) 95%
      );
  }
}

/*TODO: background properties are not performant to animate,
maybe use an image element with transform */
/*TODO: background image always fills the screen, but not
always animating on some resolution sizes.*/

/*target the red modal background with .entryModal
but makes me a bit dizzy if both this and the background are running*/
@media (prefers-reduced-motion: no-preference) {
  .entryBackground {
    animation: entryBackground 12s alternate infinite;
    background-position: 0 0;
    background-size: 1.1;
  }
  @keyframes entryBackground {
    100% {
      /* can also target the red modal background and loop
     x or y values -40.5% 31% for example animation: entryBackground 30s linear infinite running; */
      background-position: 0 31%;
    }
  }
}

/*.chakra-modal__content-container targets all chakra modals and drawers*/

/*TODO: BUG: animating opacity of the entry modal box seems to make it render 
  before going to opacity 0*/
/* .entryModal {
  animation: opacityAnimateIn 3s forwards !important;
} */
@keyframes opacityAnimateIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.Stats li {
  line-height: 1.25em;
  opacity: 0;
  animation: opacityAnimateIn 3s 3s forwards;
}

.OverlayImage {
  z-index: 20;
  filter: drop-shadow(0 2px 1rem rgba(14, 13, 13, 0.8));
}

/* TODO: improve responsive design. This removes the drummer and monk on mobile size, so it's roughly playable.*/
@media screen and (max-width: 719px), screen and (max-height: 719px) {
  .OverlayImage {
    display: none !important;
  }
}

.MemoryGameLayout {
  padding-top: 1em;
  position: absolute;
}
.MemoryGameLeft,
.MemoryGameRight {
  padding: 2vh 2vw;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2vh 2vw;
}
.MemoryGameLeft {
  gap: 1vh 2vw; /* smaller left side due to larger Noh_drummer image at bottom */
}
.GameCard {
  position: relative;
  width: 100%;
  z-index: 1;
  filter: drop-shadow(0 0 1rem rgba(14, 13, 13, 0.8));
}
.GameCard .CardReverse {
  width: 100%;
  border-radius: 5px;
  border: 3px solid gold;
  outline: 3px solid black;
  transition: all ease-out;
  transition-delay: 0.15s;
}
.GameCard .CardFront {
  transform: rotateY(90deg);
  width: 100%;
  position: absolute;
  transition: all ease-out 0.15s;
  border: 3px solid brown;
  border-radius: 5px;
  outline: 3px solid black;
}

/*CARD ANIMATIONS*/
.flipped .CardReverse {
  transform: rotateY(90deg);
}
.flipped .CardFront {
  transform: rotatey(0deg);
  transition-delay: 0.15s;
}
.gameCardFadeOut {
  opacity: 0;
  transition: all 3s 1s;
}
.cardShake {
  animation: cardShake 0.07s ease-in-out 0.3s 8 alternate;
}

.cardHueFilter {
  --hue-variable: 0deg;
  filter: hue-rotate(calc(322deg - var(--hue-variable))) grayscale(50%)
    contrast(120%);
}
.GrayJumpFilter {
  filter: grayscale(70%) brightness(0.4);
  animation: grayJumpAnimation 2s ease-out;
}
.scaleToZero {
  animation: scaleToZero 3.5s ease-in-out forwards,
    grayJumpAnimation 3s reverse forwards, opacityAnimateIn 3s reverse forwards;
}
.cardSpin {
  animation: cardSpin 3s infinite ease-in;
}
.MemoryGameRight .GameCard {
  &.cardSpin {
    animation: cardSpin 3s infinite reverse;
  }
}

@media (prefers-reduced-motion: no-preference) {
  @keyframes cardShake {
    0% {
      transform: translate(20px);
    }
    100% {
      transform: translate(-10px);
    }
  }

  @keyframes cardSpin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  @keyframes grayJumpAnimation {
    0% {
      filter: grayscale(70%) brightness(0.4) contrast(200%);
    }
    100% {
      filter: grayscale(0%) brightness(1) contrast(100%);
    }
  }
  @keyframes scaleToZero {
    100% {
      transform: scale(0);
    }
  }
}
