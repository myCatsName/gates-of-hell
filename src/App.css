Body {
  background: #333;
  overflow: hidden;
  height: 100dvh;
  width: 100%;
}

/*This is one way to deal with chakra UI "rings"*/
button:focus {
  outline: none !important;
  box-shadow: none !important;
}

button {
  filter: drop-shadow(0 2px 1rem rgba(14, 13, 13, 0.8));
  &:active {
    transform: translateY(3px);
  }
}
/*double class selector to raise specificity above ChakraUI */
.WarningModalButton.WarningModalButton {
  background-color: brown;
  border: 2px solid gold;
  outline: 2px solid black;
  text-shadow: 0px 0px 2px gold;
  transition: all 0.3s ease-in-out;

  &:hover {
    background-color: gold;
    border: 2px solid brown;
    scale: 1.05;
    z-index: 3;
  }
}

/*TODO: background properties are not performant to animate,
maybe use an image element with transform */
/*TODO: background image always fills the screen, but not
always animating on some resolution sizes.*/

/*targets the entry background-image*/
@media (prefers-reduced-motion: no-preference) {
  .chakra-modal__overlay {
    animation: entryBackground 12s alternate infinite;
    background-position: 0 0;
    background-size: 1.1;
  }

  /*targets the red modal background
  but makes me a bit dizzy if both this and the background are running*/
  .entryModal {
    /* animation: entryBackground 30s linear infinite running; */
    background-position: 0 0;
  }
  @keyframes entryBackground {
    100% {
      /* target the red modal background and loop
    smoothly with x,y values -40.5% 31% */
      background-position: 0 31%;
    }
  }
}

.Stats ul {
  margin: 0px;
}

.Stats li {
  margin: 0px;
  padding: 0px;
  line-height: 1em;
}

.OverlayImage {
  z-index: 2;
  filter: drop-shadow(0 2px 1rem rgba(14, 13, 13, 0.8));
}

/* TODO: improve responsive design. This removes the drummer and monk on mobile size, so it's roughly playable.*/
@media screen and (max-width: 719px), screen and (max-height: 719px) {
  .OverlayImage {
    display: none;
  }
}

.MemoryGameLayout {
  margin-top: 1em;
  position: absolute;
}

.MemoryGameLeft,
.MemoryGameRight {
  margin: 2vw;
  margin-top: 0vh;
  /* margin-bottom: 2vh; */
  display: grid;
  /* height: 100%; */
  grid-template-columns: repeat(2, 1fr);
  gap: 2vh 2vw;
}

.MemoryGameLeft {
  gap: 1vh 2vw; /* smaller left side due to larger Noh_drummer image at bottom */
}

.GameCard {
  position: relative;
  width: 100%;
  z-index: 1;
  filter: drop-shadow(0 0 1rem rgba(14, 13, 13, 0.8));
}

.GameCard .CardReverse {
  width: 100%;
  display: absolute;
  border: 3px solid gold;
  border-radius: 5px;
  box-shadow: "0px 12px 2px brown";
  outline: 3px solid black;
  transition: all ease-out;
  transition-delay: 0.15s;
}

.flipped .CardReverse {
  transform: rotateY(90deg);
}

.GameCard .CardFront {
  transform: rotateY(90deg);
  position: absolute;
  transition: all ease-out 0.15s;
  width: 100%;
  display: block;
  border: 3px solid brown;
  border-radius: 5px;
  outline: 3px solid black;
}

.flipped .CardFront {
  transform: rotatey(0deg);
  transition-delay: 0.15s;
}
