{"version":3,"file":"static/js/578.82de8d99.chunk.js","mappings":"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","sources":["Components/WarningModal.jsx","Layouts/TitleScreen.jsx","Sound/SFX.jsx"],"sourcesContent":["import { useContext } from \"react\";\r\nimport GameContext from \"../Context/GameContext\";\r\n\r\n//dom\r\nimport { useNavigate } from \"react-router-dom\";\r\n//ui\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n\r\n//assets\r\nimport very_dark_swatch from \"../Assets/Swatches/very_dark_swatch.png\";\r\nimport sanjo_palace from \"../Assets/sanjo_palace_burning.jpg\";\r\n\r\n//SFX\r\nimport { playDoubleTamborineSFX } from \"../Sound/SFX\";\r\n\r\nconst gameStartSFX = playDoubleTamborineSFX;\r\n\r\nexport default function WarningModal() {\r\n  const { isOpen, onClose } = useDisclosure({ defaultIsOpen: true });\r\n  const { setAllowJumps } = useContext(GameContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (preference) => {\r\n    setAllowJumps(preference);\r\n    gameStartSFX();\r\n    //Check if in iFrame (itch.io)\r\n    window.self === window.top ? navigate(\"main\") : onClose();\r\n    console.log(\r\n      \"Jumps: \" + preference,\r\n      \"\\n Title screen modal nav to main layout\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"lg\" isOpen={isOpen} onClose={() => {}} isCentered>\r\n      <ModalOverlay\r\n        className=\"entryBackground\"\r\n        backgroundImage={sanjo_palace}\r\n        backgroundRepeat={\"no-repeat\"}\r\n        bgSize={\"cover\"}\r\n      >\r\n        <ModalContent\r\n          className=\"entryModal\"\r\n          textAlign={\"center\"}\r\n          backgroundImage={very_dark_swatch}\r\n          color={\"green.400\"}\r\n          border={\"3px solid black\"}\r\n          textShadow={\"2px 2px 5px black\"}\r\n          filter={`drop-shadow(0px 30px 2rem rgba(14, 13, 13, 0.7)) drop-shadow(0px 0px 5rem rgba(14, 13, 13, 0.8))`}\r\n        >\r\n          <ModalHeader textDecor={\"underline\"}>\r\n            <h1>WARNING</h1>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            Fudō Myōō lives in Buddhist Hells.\r\n            <br />\r\n            This game has jump scares and\r\n            <br />\r\n            pictures of Buddhist ghosts and demons.\r\n            <br />\r\n            You can choose to play without jump scares.\r\n          </ModalBody>\r\n          <ModalFooter justifyContent={\"center\"} gap={\"10px\"}>\r\n            <Button className=\"ModalButton\" onClick={() => handleClick(true)}>\r\n              I'm Ready for Hell!\r\n            </Button>\r\n            <Button className=\"ModalButton\" onClick={() => handleClick(false)}>\r\n              Play Without Jump Scares\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </ModalOverlay>\r\n    </Modal>\r\n  );\r\n}\r\n","//ui\r\nimport { Suspense, lazy } from \"react\";\r\nimport WarningModal from \"../Components/WarningModal\";\r\n// const WarningModal = lazy(() => import(\"../Components/WarningModal\"));\r\n\r\nexport default function TitleScreen() {\r\n  return (\r\n    // <Suspense>\r\n\r\n    <>\r\n      <WarningModal />\r\n    </>\r\n\r\n    // </Suspense>\r\n  );\r\n}\r\n","import { Howl, Howler } from \"howler\";\r\nimport { muteFX as muteSFX } from \"../Context/AudioContext\";\r\n\r\nimport OM from \"../Sound/Effects/jagadamba_om.mp3\";\r\nimport slap from \"../Sound/Effects/jagadamba__slap-11.mp3\";\r\nimport lock from \"../Sound/Effects/jagadamba__door-lock-click.mp3\";\r\nimport tamborine from \"../Sound/Effects/jagadamba__tambourine-1.mp3\";\r\nimport hauntingDrums from \"../Sound/Effects/HauntingDrums0.01.mp3\";\r\nimport cleansingBell from \"../Sound/Effects/ganapataye__04_bells.mp3\";\r\nimport gongs1 from \"../Sound/Effects/10gongs.mp3\";\r\nimport coinDrop from \"../Sound/Effects/CoinDrop.wav\";\r\nimport doubleTambourine from \"../Sound/Effects/doubleTambourine.mp3\";\r\n\r\nconst pooledSFX = new Set();\r\n\r\nexport function stopCurrentSFX() {\r\n  for (const fx of pooledSFX) {\r\n    fx.stop();\r\n  }\r\n  pooledSFX.clear();\r\n}\r\n\r\nexport function playOM() {\r\n  const omSFX = new Howl({\r\n    src: [OM],\r\n    volume: muteSFX ? 0 : 0.6,\r\n    onplay: function () {\r\n      pooledSFX.add(omSFX);\r\n    },\r\n  });\r\n  omSFX.play();\r\n}\r\n\r\nexport function playSlapSFX() {\r\n  const slapSFX = new Howl({\r\n    src: [slap],\r\n    volume: muteSFX ? 0 : 0.6,\r\n    rate: 0.7,\r\n  });\r\n  slapSFX.play();\r\n}\r\n\r\nexport function playLockSFX() {\r\n  const lockSFX = new Howl({\r\n    src: [lock],\r\n    volume: muteSFX ? 0 : 0.4,\r\n  });\r\n  lockSFX.play();\r\n}\r\n\r\nexport function playCleansingBellSFX() {\r\n  const cleansingBellSFX = new Howl({\r\n    src: [cleansingBell],\r\n    volume: muteSFX ? 0 : 4,\r\n    rate: 0.85,\r\n    onplay: function () {\r\n      pooledSFX.add(cleansingBellSFX);\r\n    },\r\n  });\r\n  cleansingBellSFX.play();\r\n}\r\n\r\nexport function playCoinDropSFX() {\r\n  const coinDropSFX = new Howl({\r\n    src: [coinDrop],\r\n    volume: muteSFX ? 0 : 0.8,\r\n    rate: 3,\r\n  });\r\n  coinDropSFX.play();\r\n}\r\n\r\nexport function playDoubleTamborineSFX() {\r\n  const doubleTambourineSFX = new Howl({\r\n    src: [doubleTambourine],\r\n    volume: muteSFX ? 0 : 0.7,\r\n    rate: 0.5,\r\n  });\r\n  doubleTambourineSFX.play();\r\n}\r\n\r\n/* the volume of music is dropped by half when HAUNTINGDRUMSSFX plays as the \"win\" theme,\r\nso the onend function puts it back up. It works, but fade would be better, and should\r\nnot be handled in the SFX anyways. TODO: Make a victory method.*/\r\nexport function playHauntingDrumsSFX() {\r\n  const hauntingDrumsSFX = new Howl({\r\n    src: [hauntingDrums],\r\n    volume: muteSFX ? 0 : 2.5,\r\n    rate: 1,\r\n    onplay: function () {\r\n      pooledSFX.add(hauntingDrumsSFX);\r\n    },\r\n    onend: function () {\r\n      Howler.volume(1);\r\n    },\r\n  });\r\n  hauntingDrumsSFX.play();\r\n}\r\n\r\n//Gong SFX is a bit Fubar TODO : check sound pool size, fix volume FUBAR.\r\nexport function playGongs1SFX() {\r\n  const gongs1SFX = new Howl({\r\n    src: [gongs1],\r\n    volume: muteSFX ? 0 : 0.4,\r\n    rate: 1,\r\n    onplay: function () {\r\n      pooledSFX.add(gongs1SFX);\r\n      setTimeout(() => gongs1SFX.fade(gongs1SFX.volume(), 0, 3000), 2000);\r\n    },\r\n    onfade: function () {\r\n      gongs1SFX.stop();\r\n      gongs1SFX.volume(0.4);\r\n    },\r\n  });\r\n  gongs1SFX.play();\r\n}\r\n\r\nexport function playTamborineSFX() {\r\n  const tamborineSFX = new Howl({\r\n    src: [tamborine],\r\n    volume: muteSFX ? 0 : 0.2,\r\n    rate: 0.85,\r\n  });\r\n  tamborineSFX.play();\r\n}\r\nexport function playUnMutableTamborineSFX() {\r\n  const tamborineSFX = new Howl({\r\n    src: [tamborine],\r\n    volume: 0.2,\r\n    rate: 0.85,\r\n  });\r\n  tamborineSFX.play();\r\n}\r\n"],"names":["gameStartSFX","playDoubleTamborineSFX","WarningModal","_useDisclosure","useDisclosure","defaultIsOpen","isOpen","onClose","setAllowJumps","useContext","GameContext","navigate","useNavigate","handleClick","preference","window","self","top","console","log","_jsx","Modal","size","isCentered","children","ModalOverlay","className","backgroundImage","sanjo_palace","backgroundRepeat","bgSize","_jsxs","ModalContent","textAlign","very_dark_swatch","color","border","textShadow","filter","ModalHeader","textDecor","ModalBody","ModalFooter","justifyContent","gap","Button","onClick","TitleScreen","_Fragment","pooledSFX","Set","stopCurrentSFX","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","stop","err","e","f","clear","playOM","omSFX","Howl","src","OM","volume","muteSFX","onplay","add","play","playSlapSFX","slap","rate","playLockSFX","lock","playCleansingBellSFX","cleansingBellSFX","cleansingBell","playCoinDropSFX","coinDrop","doubleTambourine","playHauntingDrumsSFX","hauntingDrumsSFX","hauntingDrums","onend","Howler","playGongs1SFX","gongs1SFX","gongs1","setTimeout","fade","onfade","playTamborineSFX","tamborine","playUnMutableTamborineSFX"],"sourceRoot":""}